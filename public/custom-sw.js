// This is a custom service worker that will be used in addition to the one generated by next-pwa

// Listen for the 'sync' event to handle background syncing
self.addEventListener('sync', (event) => {
  if (event.tag === 'sync-data') {
    // Notify all clients that they should sync data
    self.clients.matchAll().then((clients) => {
      clients.forEach((client) => {
        client.postMessage({ type: 'SYNC_DATA' });
      });
    });
  }
});

// Add a custom fetch handler for the offline page
self.addEventListener('fetch', (event) => {
  // Only handle navigation requests to dashboard or settings
  if (!event.request.url.includes('/dashboard') && 
      !event.request.url.includes('/settings') && 
      event.request.mode !== 'navigate') {
    return;
  }

  // For navigation requests, add custom offline handling
  if (event.request.mode === 'navigate') {
    event.respondWith(
      fetch(event.request)
        .catch(() => {
          return caches.match('/offline');
        })
    );
  }
});
